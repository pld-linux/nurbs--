diff -Nur nurbs++-3.0.11.orig/config/has_image_magick.m4 nurbs++-3.0.11/config/has_image_magick.m4
--- nurbs++-3.0.11.orig/config/has_image_magick.m4	Tue May  7 21:49:27 2002
+++ nurbs++-3.0.11/config/has_image_magick.m4	Wed Jul 10 08:05:08 2002
@@ -1,7 +1,7 @@
 dnl WITH_IMAGE_MAGICK
 dnl
 dnl Wheter Image Magick is defined in this system.
-AC_DEFUN(WITH_IMAGE_MAGICK,
+AC_DEFUN(AC_WITH_IMAGE_MAGICK,
 [
 AC_REQUIRE([AC_PROG_CXX])
 AC_MSG_CHECKING(whether Image Magick's Magick++ library is present)
@@ -10,9 +10,9 @@
 [
  AC_LANG_SAVE
  AC_LANG_CPLUSPLUS
- MAGICK_CPPFLAGS=`Magick++-config --cppflags`
- MAGICK_LDFLAGS=`Magick++-config --ldflags`
- MAGICK_LIBS=`Magick++-config --libs`
+ MAGICK_CPPFLAGS=`Magick-config --cppflags`
+ MAGICK_LDFLAGS=`Magick-config --ldflags`
+ MAGICK_LIBS=`Magick-config --libs`
  SAVE_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS $MAGICK_CPPFLAGS"
  SAVE_LDFLAGS="$LDFLAGS"
@@ -21,7 +21,10 @@
  LIBS="$LIBS $MAGICK_LIBS"
 
  AC_TRY_COMPILE([
- #include <Magick++>
+ #include <stdio.h>
+ #include <time.h>
+ #include <sys/types.h>
+ #include <magick/api.h>
  ],[return 1;],
  has_image_magick=yes,
  has_image_magick=no)
@@ -33,10 +33,5 @@
 ])
 
 AC_MSG_RESULT($has_image_magick)
-if test "$has_image_magick" = yes; then
-   AC_DEFINE(MAGICK_CPPFLAGS)
-   AC_DEFINE(MAGICK_LDFLAGS)
-   AC_DEFINE(MAGICK_LIBS)
-fi
 ])
 
diff -Nur nurbs++-3.0.11.orig/configure.in nurbs++-3.0.11/configure.in
--- nurbs++-3.0.11.orig/configure.in	Fri May 24 20:15:49 2002
+++ nurbs++-3.0.11/configure.in	Wed Jul 10 08:03:52 2002
@@ -151,17 +151,21 @@
 
 
 
-dnl has_image_magick=no
-dnl if test "$test_magick" = yes; then
-	dnl WITH_IMAGE_MAGICK
-dnl fi
+if test "$test_magick" = yes; then
+	AC_WITH_IMAGE_MAGICK
+else
+	has_image_magick=no
+fi
 
 
-dnl if test "$has_image_magick" = yes; then
-dnl 	option_libs=' $(MAGICK_LDFLAGS) $(MAGICK_LIBS)'
-dnl 	option_include=' $(MAGICK_CPPFLAGS)'
-dnl	AC_DEFINE(WITH_IMAGE_MAGICK)
-dnl 
+if test "$has_image_magick" = yes; then
+ 	option_libs=' $(MAGICK_LDFLAGS) $(MAGICK_LIBS)'
+ 	option_include=' $(MAGICK_CPPFLAGS)'
+	AC_DEFINE([WITH_IMAGE_MAGICK])
+fi
+AC_SUBST(MAGICK_CPPFLAGS)
+AC_SUBST(MAGICK_LIBS)
+AC_SUBST(MAGICK_LDFLAGS)
 	
 dnl
 dnl setting the order to be column order
diff -Nur nurbs++-3.0.11.orig/image/image.h nurbs++-3.0.11/image/image.h
--- nurbs++-3.0.11.orig/image/image.h	Mon May 13 23:07:45 2002
+++ nurbs++-3.0.11/image/image.h	Wed Jul 10 08:06:04 2002
@@ -68,7 +68,10 @@
 
 #ifdef WITH_IMAGE_MAGICK
 
-#include <magick/magick.h>
+#include <stdio.h>
+#include <time.h>
+#include <sys/types.h>
+#include <magick/api.h>
 #if defined(__cplusplus) || defined(c_plusplus)
 #undef class
 #endif
@@ -107,11 +107,11 @@
       int write(const char* filename) ;
       
       //Image processing functions offered by ImageMagick
-      void despeckle() { setImage() ; image=DespeckleImage(image); setMatrix() ;}
-      void emboss() {  setImage() ; image=EmbossImage(image) ; setMatrix() ;}
-      void enhance() {  setImage() ; image=EnhanceImage(image) ; setMatrix() ;}
-      void blur(double b) {  setImage() ; image=BlurImage(image,b) ; setMatrix() ;}
-      void oilPaint(const unsigned int a) { setImage() ; image=OilPaintImage(image,a) ; setMatrix() ;}
+      void despeckle() { ExceptionInfo exc; setImage() ; image=DespeckleImage(image,&exc); setMatrix() ;}
+      void emboss() { ExceptionInfo exc; setImage() ; image=EmbossImage(image,1.0,1.0,&exc) ; setMatrix() ;}
+      void enhance() { ExceptionInfo exc; setImage() ; image=EnhanceImage(image,&exc) ; setMatrix() ;}
+      void blur(double b) { ExceptionInfo exc; setImage() ; image=BlurImage(image,b,1.0,&exc) ; setMatrix() ;}
+      void oilPaint(const unsigned int a) { ExceptionInfo exc; setImage() ; image=OilPaintImage(image,a,&exc) ; setMatrix() ;}
       
       
     protected:
diff -Nur nurbs++-3.0.11.orig/image/image_.cpp nurbs++-3.0.11/image/image_.cpp
--- nurbs++-3.0.11.orig/image/image_.cpp	Mon May 13 23:07:45 2002
+++ nurbs++-3.0.11/image/image_.cpp	Wed Jul 10 08:10:57 2002
@@ -30,32 +30,34 @@
 #if defined(WITH_IMAGE_MAGICK)
 
   void IM_ImageT<Color>::setMatrix(){
+    PixelPacket *pixels=GetImagePixels(image,0,0,cols(),rows());
 #ifdef COLUMN_ORDER
     for(int i=0;i<rows();++i)
       for(int j=0;j<cols();++j){
-	vm[j][i].r = image->pixels[i*cols()+j].red ;
-	vm[j][i].g = image->pixels[i*cols()+j].green ;
-	vm[j][i].b = image->pixels[i*cols()+j].blue ;
+	vm[j][i].r = pixels[i*cols()+j].red ;
+	vm[j][i].g = pixels[i*cols()+j].green ;
+	vm[j][i].b = pixels[i*cols()+j].blue ;
       }
 #else
     int size=rows()*cols() ;
     for(int i=0;i<size;++i){
-      m[i].r = image->pixels[i].red ;
-      m[i].g = image->pixels[i].green ;
-      m[i].b = image->pixels[i].blue;
+      m[i].r = pixels[i].red ;
+      m[i].g = pixels[i].green ;
+      m[i].b = pixels[i].blue;
     }
 #endif
   }
   
   void IM_ImageT<unsigned char>::setMatrix(){
+    PixelPacket *pixels=GetImagePixels(image,0,0,cols(),rows());
 #ifdef COLUMN_ORDER
     for(int i=0;i<rows();++i)
       for(int j=0;j<cols();++j)
-	vm[j][i] = image->pixels[i*cols()+j].red ;
+	vm[j][i] = pixels[i*cols()+j].red ;
 #else
     int size=rows()*cols() ;
     for(int i=0;i<size;++i){
-      m[i] = image->pixels[i].red ;
+      m[i] = pixels[i].red ;
     }
 #endif
   }
@@ -63,76 +65,73 @@
  
   void IM_ImageT<Color>::setImage(){
     if(image->rows != (unsigned int)rows() || image->columns != (unsigned int)cols()){
-      image->rows = rows() ;
-      image->columns = cols() ;
-      image->packets = rows()*cols() ;
-      if(image->pixels)
-	delete []image->pixels ;
-      image->pixels = (RunlengthPacket*)malloc(sizeof(RunlengthPacket)*image->packets) ;
+      char *pixmem=(char*)malloc(cols()*rows()*3);
+      ExceptionInfo exc;
+      DestroyImage(image);
+      image=ConstituteImage(cols(),rows(),"RGB",CharPixel,pixmem,&exc);
+      free(pixmem);
     }
-    
+    PixelPacket *pixels=SetImagePixels(image,0,0,cols(),rows());
 #ifdef COLUMN_ORDER
     for(int i=0;i<rows();++i)
       for(int j=0;j<cols();++j){
-	image->pixels[i*cols()+j].red = vm[j][i].r ;
-	image->pixels[i*cols()+j].green = vm[j][i].g ; 
-	image->pixels[i*cols()+j].blue =  vm[j][i].b ; 
-	image->pixels[i*cols()+j].index =  0;
-	image->pixels[i*cols()+j].length = 0 ;
+	pixels[i*cols()+j].red = vm[j][i].r ;
+	pixels[i*cols()+j].green = vm[j][i].g ; 
+	pixels[i*cols()+j].blue =  vm[j][i].b ; 
+	pixels[i*cols()+j].opacity = 0 ;
       }
 #else
     int size=rows()*cols() ;
     for(int i=0;i<size;++i){
-      image->pixels[i].red = m[i].r ;
-      image->pixels[i].green = m[i].g ; 
-      image->pixels[i].blue =  m[i].b ; 
-      image->pixels[i].index =  0;
-      image->pixels[i].length = 0 ;
+      pixels[i].red = m[i].r ;
+      pixels[i].green = m[i].g ; 
+      pixels[i].blue =  m[i].b ; 
+      pixels[i].opacity = 0 ;
     }
 #endif
+    SyncImagePixels(image);
   }
   
   void IM_ImageT<unsigned char>::setImage(){
     if(image->rows != (unsigned int)rows() || image->columns != (unsigned int)cols()){
-      image->rows = rows() ;
-      image->columns = cols() ;
-      image->packets = rows()*cols() ;
-      if(image->pixels)
-	delete []image->pixels ;
-      image->pixels = (RunlengthPacket*)malloc(sizeof(RunlengthPacket)*image->packets) ;
+      char *pixmem=(char*)malloc(cols()*rows()*3);
+      ExceptionInfo exc;
+      DestroyImage(image);
+      image=ConstituteImage(cols(),rows(),"RGB",CharPixel,pixmem,&exc);
+      free(pixmem);
     }
-    
+    PixelPacket *pixels=SetImagePixels(image,0,0,cols(),rows());
 #ifdef COLUMN_ORDER
     for(int i=0;i<rows();++i)
       for(int j=0;j<cols();++j){
-	image->pixels[i*cols()+j].red = vm[j][i] ;
-	image->pixels[i*cols()+j].green = vm[j][i] ; 
-	image->pixels[i*cols()+j].blue =  vm[j][i] ; 
-	image->pixels[i*cols()+j].index =  vm[j][i] ;
-	image->pixels[i*cols()+j].length = 0 ;
+	pixels[i*cols()+j].red = vm[j][i] ;
+	pixels[i*cols()+j].green = vm[j][i] ; 
+	pixels[i*cols()+j].blue =  vm[j][i] ; 
+	pixels[i*cols()+j].opacity = 0 ;
       }
 #else
     int size=rows()*cols() ;
     for(int i=0;i<size;++i){
-      image->pixels[i].red = m[i] ;
-      image->pixels[i].green = m[i] ;
-      image->pixels[i].blue = m[i] ;
-      image->pixels[i].index = m[i] ; 
-      image->pixels[i].length = 0 ;
+      pixels[i].red = m[i] ;
+      pixels[i].green = m[i] ;
+      pixels[i].blue = m[i] ;
+      pixels[i].opacity = 0 ;
     }
 #endif
+    SyncImagePixels(image);
   }
   
   
   
   int IM_ImageT<Color>::read(const char* filename) {
+    ExceptionInfo exc;
     (void)strcpy(image_info.filename,filename) ;
     if(image)
       DestroyImage(image) ;
-    image=ReadImage(&image_info) ;
+    image=ReadImage(&image_info,&exc) ;
     if(!image)
       return 0 ;
-    UncondenseImage(image) ;
+    /*UncondenseImage(image) ;*/
     resize(image->rows,image->columns) ;
     
     setMatrix() ;
@@ -141,14 +140,15 @@
   }
   
   int IM_ImageT<unsigned char>::read(const char* filename) {
+    ExceptionInfo exc;
     (void)strcpy(image_info.filename,filename) ;
     image_info.monochrome = 1 ;
     if(image)
       DestroyImage(image) ;
-    image=ReadImage(&image_info) ;
+    image=ReadImage(&image_info,&exc) ;
     if(!image)
       return 0 ;
-    UncondenseImage(image) ;
+    /*UncondenseImage(image) ;*/
     resize(image->rows,image->columns) ;
     
     setMatrix() ;
@@ -170,8 +170,6 @@
     
     image->rows = rows() ;
     image->columns = cols() ;
-    image->packets=rows()*cols() ;
-    image->pixels = (RunlengthPacket*)malloc(sizeof(RunlengthPacket)*image->packets) ;
     
     setImage() ;
     
@@ -191,8 +189,6 @@
     
     image->rows = rows() ;
     image->columns = cols() ;
-    image->packets=rows()*cols() ;
-    image->pixels = (RunlengthPacket*)malloc(sizeof(RunlengthPacket)*image->packets) ;
     
     setImage() ;
     
--- nurbs++-3.0.11/image/filter.cpp.orig	Thu Jul 11 00:30:51 2002
+++ nurbs++-3.0.11/image/filter.cpp	Thu Jul 11 00:30:14 2002
@@ -27,7 +27,7 @@
 #define FILTER_SOURCES
 
 #include "filter.h"
-#include "vector.h"
+#include "../matrix/vector.h"
 
 /*!
  */
--- nurbs++-3.0.11/nurbs/Makefile.am.orig	Thu Jul 11 00:31:17 2002
+++ nurbs++-3.0.11/nurbs/Makefile.am	Thu Jul 11 00:38:38 2002
@@ -2,7 +2,7 @@
 
 MAGICK_INCLUDE =  $(X_CFLAGS) @MAGICK_CPPFLAGS@
 
-INCLUDES = $(MAGICK_INCLUDE) -I@top_srcdir@/include @matrix_include@ $(GL_CFLAGS)
+INCLUDES = -I@top_srcdir@/include @matrix_include@ $(MAGICK_INCLUDE) $(GL_CFLAGS)
 
 pkginclude_HEADERS = curve.h matrixRT.h nurbsSub.h hnurbs.h nurbs.h nurbs_sp.h hnurbsS.h nurbsGL.h surface.h hnurbsS_sp.h nurbsS.h nurbsS_sp.h tri_spline.h nurbs_global.h
 
